"""
Django settings for Twitter project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from decouple import config

#BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6%a^o=(=6f6&^vi0r0o+#akd@ujq=4zqb^^wb#!^je46x@uz0q'
ENVIRONMENT = os.environ.get('ENVIRONMENT', default='local')
# SECURITY WARNING: keep the secret key used in production secret!
if ENVIRONMENT == 'production':
    SECRET_KEY = os.environ.get('SECRET_KEY')
else:
    SECRET_KEY = config('SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS').split(',')


# Application definition

INSTALLED_APPS = [
    'core',
    'authorization',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',
    'corsheaders',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.FilterUserMiddleware',
]

ROOT_URLCONF = 'config.urls'

AUTHENTICATION_BACKENDS = [
    'config.backends.AuthBackend'
]

LOGIN_URL = '/authorization/twitter_login/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

if ENVIRONMENT == 'local':
    STATIC_URL = 'static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
    MEDIA_URL = "/media/"
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
    
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if ENVIRONMENT == 'production':
    PRODUCTION = True
    DEBUG = False
    ALLOWED_HOSTS = ['*']
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.environ.get('RDS_DB_NAME'),
            'USER': os.environ.get('RDS_USERNAME'),
            'PASSWORD': os.environ.get('RDS_PASSWORD'),
            'HOST': os.environ.get('RDS_HOSTNAME'),
            'PORT': os.environ.get('RDS_PORT', default=3306),
            'OPTIONS': {
                'charset': 'utf8mb4'  # This is the important line
            }
        }
    }
    
    if "AWS_ACCESS_KEY_ID" in os.environ and "AWS_STORAGE_BUCKET_NAME" in os.environ:
        AWS_ACCESS_KEY_ID = os.environ["AWS_ACCESS_KEY_ID"]
        AWS_SECRET_ACCESS_KEY = os.environ["AWS_SECRET_ACCESS_KEY"]
        AWS_STORAGE_BUCKET_NAME = os.environ["AWS_STORAGE_BUCKET_NAME"]
        AWS_DEFAULT_ACL = None
        AWS_QUERYSTRING_AUTH = False
        AWS_S3_SIGNATURE_VERSION = 's3v4'
        AWS_S3_REGION_NAME = "ap-northeast-1"
        AWS_S3_ENCRYPTION = True
        AWS_S3_HOST = ''
        AWS_IS_GZIPPED = True
        AWS_S3_OBJECT_PARAMETERS = {
            'CacheControl': 'max-age=86400',
        }
        DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
        STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
        STATIC_URL = os.environ.get(
            'STATIC_URL', default=f'https://{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/')
        MEDIA_URL = os.environ.get(
            'MEDIA_URL', default=f'https://{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/')
        HOST_NAME = 'https://twikatukko.com'
    SENDGRID_API_KEY  = os.environ['SENDGRID_API_KEY']  
    STRIPE_PUBLISHABLE_KEY = os.environ['STRIPE_LIVE_PUBLIC_KEY']
    STRIPE_SECRET_KEY = os.environ['STRIPE_LIVE_SECRET_KEY']
    STRIPE_PRICE_ID = os.environ['STRIPE_PRICE_ID']
    STRIPE_ENDPOINT_SECRET = os.environ['STRIPE_ENDPOINT_SECRET']

    EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
    EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
    
    bearer_token = os.environ['BEARER_TOKEN']
    api_key = os.environ['TWITTER_API_KEY']
    api_secret = os.environ['TWITTER_API_SECRET']
    client_id = os.environ['TWITTER_CLIENT_ID']
    client_secret = os.environ['TWITTER_CLIENT_SECRET']
    oauth_callback_url = os.environ['TWITTER_OAUTH_CALLBACK_URL']

else:
    PRODUCTION = False
    DEBUG = True
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
    HOST_NAME = 'http://localhost:8000'
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
    
    SENDGRID_API_KEY='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'

    STRIPE_PUBLISHABLE_KEY = 'pk_test_51LNkD7KqobOw2dYyp9cXizHz7c8uAQT6s2tBEtb0StBw8YhNhuFpAk37gH47R5aTvUCXsYLwUzXkYrxDPmTDxaDq00uLpF2SkR'
    STRIPE_SECRET_KEY = 'sk_test_51LNkD7KqobOw2dYydWqhezdOcKziDNorRNqCJIQl4fGsq1MsAj8nI1JIWyYbtUP0mhuTKF7b4a15Ie8b9e1QSnEF00NJsENpVC'
    STRIPE_ENDPOINT_SECRET = 'we_1LUhrgKqobOw2dYyM5lfn0Vs'
    STRIPE_PRICE_ID = 'price_1LUMoeKqobOw2dYyYZPrEiYD'
    
    bearer_token = config('BEARER_TOKEN')
    api_key = config('TWITTER_API_KEY')
    api_secret = config('TWITTER_API_SECRET')
    client_id = config('TWITTER_CLIENT_ID')
    client_secret = config('TWITTER_CLIENT_SECRET')
    oauth_callback_url = config('TWITTER_OAUTH_CALLBACK_URL')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"


# Celery Configuration Options
CELERY_TIMEZONE = "Asia/Tokyo"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# RABBITMQ related settings 
BROKER_URL = 'django://'
CELERY_RESULT_BACKEND = 'django-db'
# celery setting.
CELERY_CACHE_BACKEND = 'default'

# django setting.
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

EMAIL_FROM = "aaaxaaaxaaax@icloud.com"
EMAIL_USE_TLS = True